虚拟环境是Python解释器的一个副本环境，在这个环境中可以安装其它第三方Python包，在虚拟环境中安装的Python包不会影响全局环境中的包。

我们进入到哪个虚拟环境，这个虚拟环境下的可执行文件就可以直接使用，如bin目录下的pip。


p：非常简单的交互式 python 版本管理工具。
pyenv：简单的 Python 版本管理工具。
Vex：可以在虚拟环境中执行命令
virtualenv：创建独立 Python 环境的工具。
virtualenvwrapper：virtualenv 的一组扩展。

配置虚拟环境：
    1.配置虚拟环境：pip install virtualenv
                    pip install virtualenvwrapper       （Linux系统使用命令）
                    pip install virtualenvwrapper-win   （windows系统使用命令）
    2.创建虚拟模块：mkvirtualenv [虚拟环境名字]
    3.virtualenv -p /usr/bin/python3.8 [虚拟环境名字]：给虚拟环境指定解释器
    4.进入指定虚拟环境：workon [虚拟环境名字]
      4.1查看当前虚拟环境安装的模块：workon 或 lsvirtualenv
    5.建立虚拟环境后，需要激活虚拟模块：虚拟环境的位置的Scripts文件夹中打开命令行输入：activate 或者 .\activate.bat
    6.退出虚拟环境：deactivate.bat

删除虚拟环境：rmvirtualenv [虚拟环境名字]


pycharm创建虚拟环境就很简单：Project Interpreter中Add，然后给虚拟环境指定一个空目录位置，和基本解释器即可。
    可以勾选： Make available to all projects可用于所有项目
               Inherit global site-packages继承全局站点软件包


虚拟环境有scrapy库而解释器没有，不能直接使用scrpay命令：
    1.  ln -s /Library/Frameworks/Python.framework/Versions/Python3.9/bin/scrapy /usr/local/bin/scrapy
    2.  /venv/bin/python -m scrpay（虚拟环境路径的python，推荐）